/* Game screen styling */
:root {
  --tile-width: clamp(40px, 10vmin, 80px);
  --tile-height: clamp(50px, 12vmin, 100px);
  --tile-font: clamp(2rem, 5vmin, 3rem);
  --picture-size: clamp(8rem, 25vmin, 16rem);
  --btn-font: clamp(1.2rem, 3vmin, 1.6rem);
  --tiles-height: min(35vh, 80vmin);
}

body {
  text-align: center;
  padding-top: 0.5rem;
  overflow: hidden; /* prevent page scrolling during gameplay */
  display: flex;
  flex-direction: column;
  align-items: center;
  background: #f7f7f5;
  user-select: none;
}
.game-layout {
  display: flex;
  flex-direction: column;
  align-items: center;
  transform-origin: top center;
}
#picture {
  /* enlarge the emoji display */
  font-size: var(--picture-size);
  /* reduced spacing to bring word closer to the top */
  margin-bottom: 1rem;
}
.word {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 2rem;
}
.slot {
  width: var(--tile-width);
  height: var(--tile-height);
  border: 2px dashed #555;
  border-radius: 6px;
  font-size: var(--tile-font);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #000;
  user-select: none;
}
.slot.preview {
  opacity: 0.3;
}
.slot.filled {
  border-style: solid;
}
.tiles {
  position: relative;
  height: var(--tiles-height);
  width: min(calc(100vw - 2 * var(--tile-width)), calc(var(--tile-width) * 12));
  margin: 0 auto;
}

@media (orientation: landscape) {
  .tiles {
    margin: 0;
  }
}
.tile {
  width: var(--tile-width);
  height: var(--tile-height);
  background: #fdfdfd;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--tile-font);
  cursor: grab;
  position: absolute;
  user-select: none;
}
.tile.active {
  box-shadow: 0 6px 10px rgba(0,0,0,0.4);
  z-index: 1;
}
.tile.shake {
  animation: shake 0.25s;
}
.slot.hover {
  box-shadow: 0 0 0 6px rgba(255, 165, 0, 0.9);
  border-color: #ffa500;
  background-color: rgba(255, 200, 0, 0.25);
}
.slot.wrong {
  animation: flash-red 0.3s;
}
.slot.flash-letter {
  animation: flash-letter-red 0.3s;
}
#next {
  position: fixed;
  bottom: clamp(8rem, 16vh, 10rem);
  right: 50%;
  transform: translateX(50%);
  z-index: 2;
}

/* button styles moved to base.css */
.btn {
  font-size: var(--btn-font);
}

.slot.placed {
  animation: pop 0.3s ease;
}

@keyframes pop {
  0% { transform: scale(1); }
  50% { transform: scale(1.3); }
  100% { transform: scale(1); }
}

#message {
  font-size: clamp(2rem, 10vw, 5rem);
  font-weight: 900;
  margin-top: 1rem;
  display: none;
  pointer-events: none;
  position: fixed;
  left: 50%;
  top: clamp(0.5rem, 8vh, 3rem);
  transform: translateX(-50%);
  white-space: nowrap;
  z-index: 2;
}

#message.show {
  display: block;
  animation: popIn 0.3s ease-out;
}


.confetti-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
}

.confetti {
  position: absolute;
  top: -10px;
  font-size: 2.5rem;
  animation: fall var(--duration, 4s) linear forwards;
  left: var(--x, 0);
  transform: translateX(0);
}

@keyframes fall {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateX(var(--sway, 0)) translateY(100vh) rotate(var(--rotate, 360deg));
    opacity: 0;
  }
}

#picture.animate {
  animation: bounce 0.6s ease-in-out infinite alternate;
}

@keyframes bounce {
  from { transform: scale(0.9); }
  to { transform: scale(1.3); }
}

@keyframes popIn {
  0% { transform: translate(-50%, -50%) scale(0); opacity: 0; }
  70% { transform: translate(-50%, -50%) scale(1.3); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

.tile.drop {
  animation: tile-fall var(--duration, 1.6s) cubic-bezier(0.2, 0.8, 0.4, 1) var(--delay, 0s) forwards;
}

@keyframes tile-fall {
  to {
    transform: translateY(120vh) rotate(var(--spin, 45deg));
    opacity: 0;
  }
}

@keyframes shake {
  0%, 100% { transform: translate(0, 0); }
  25% { transform: translate(-4px, 0); }
  50% { transform: translate(4px, 0); }
  75% { transform: translate(-4px, 0); }
}

@keyframes flash-red {
  from { box-shadow: 0 0 0 4px red; }
  to { box-shadow: 0 0 0 4px transparent; }
}

@keyframes flash-letter-red {
  from { color: red; }
  to { color: #000; }
}

/* Word history at bottom of screen */
.history {
  position: fixed;
  bottom: 0.5rem;
  left: 50%;
  transform: translateX(-50%);
  display: grid;
  grid-template-columns: repeat(10, auto);
  gap: 0.25rem 0.5rem;
  max-width: 100%;
  pointer-events: none;
}

.history-emoji,
.history-placeholder {
  width: clamp(1.3rem, 2.5vw, 2.1rem);
  height: clamp(1.3rem, 2.5vw, 2.1rem);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: clamp(1.3rem, 2.5vw, 2.1rem);
  user-select: none;
}

.history-placeholder {
  opacity: 0.5;
  border: 1px solid #bbb;
  border-radius: 4px;
  box-sizing: border-box;
}

/* Settings button */
.settings-btn {
  position: fixed;
  top: clamp(0.25rem, 2vh, 1rem);
  right: clamp(0.25rem, 2vw, 1rem);
  background: none;
  border: none;
  font-family: "Nunito", sans-serif;
  font-size: clamp(1.6rem, 4vw, 3rem);
  cursor: pointer;
  z-index: 3;
}

/* Modal overlay */
.settings-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 4;
}

.settings-modal.hidden {
  display: none;
}

.settings-modal .modal-content {
  background: #fff;
  padding: 2rem;
  border-radius: 8px;
  text-align: center;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* button styles moved to base.css */

#menu-btn {
  background-color: #f44336;
  color: #fff;
}

@media (orientation: landscape) {
  body {
    padding-top: 1rem;
  }
  .game-layout {
    flex-direction: row;
    align-items: flex-start;
    justify-content: space-evenly;
  }
  #picture {
    margin-right: 2rem;
    margin-bottom: 0;
  }
  .word {
    margin-bottom: 1rem;
  }
  :root {
    --tiles-height: min(50vh, 80vmin);
  }
}

@media (min-width: 1200px) {
  #next {
    bottom: clamp(2rem, 10vh, 6rem);
  }
  .settings-btn {
    top: clamp(1rem, 2vh, 2rem);
    right: clamp(1rem, 2vw, 2rem);
  }
}

body.fade-out {
  animation: screen-out 0.5s ease forwards;
}

body.word-fade-out {
  animation: word-out 0.2s ease forwards;
}

body.word-fade-in {
  animation: word-in 0.2s ease;
}

@keyframes screen-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes word-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes word-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

.start-overlay {
  position: fixed;
  inset: 0;
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 5;
}

.start-overlay.hidden {
  display: none;
}

.word-select {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.word-choices {
  margin-top: 2rem;
  display: grid;
  grid-template-columns: repeat(2, minmax(160px, 1fr));
  gap: 1rem;
}

.word-option {
  display: flex;
  align-items: center;
  justify-content: center;
}

.word-btn {
  width: 100%;
  height: 100%;
  padding: 0;
  font-size: 5rem;
  background-color: #fff;
  border: none;
  border-radius: 12px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  cursor: pointer;
  transition: transform 0.2s, box-shadow 0.2s, background 0.3s;
}

.word-btn:hover {
  transform: scale(1.05);
}

.word-btn.selected {
  animation: pop 0.3s ease;
}

/* Fade-out transition when a word is selected */
.start-overlay.selection-made h1,
.start-overlay.selection-made .word-option:not(.selected) {
  opacity: 0;
  transition: opacity 0.3s;
}

.start-overlay.selection-made .word-option.selected .word-btn {
  background: transparent;
  box-shadow: none;
}
